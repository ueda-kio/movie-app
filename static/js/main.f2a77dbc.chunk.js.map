{"version":3,"sources":["components/Header.jsx","components/Movie.jsx","components/Search.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Header","props","className","text","Movie","movie","poster","Poster","Title","alt","src","Year","Search","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","useEffect","a","fetch","initRequest","json","initJson","request","Response","console","log","Error","map","imdbID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRASeA,EARA,SAACC,GACd,OACE,wBAAQC,UAAU,aAAlB,SACE,6BAAKD,EAAME,UCgBFC,EAlBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACTC,EAA0B,QAAjBD,EAAME,OAHJ,gBAGoCF,EAAME,OAC3D,OACE,qBAAIL,UAAU,UAAd,UACE,oBAAIA,UAAU,iBAAd,SAAgCG,EAAMG,QACtC,qBAAKN,UAAU,mBAAf,SACE,qBACEA,UAAU,eACVO,IAAG,4BAAuBJ,EAAMG,OAChCE,IAAKJ,MAGT,oBAAGJ,UAAU,gBAAb,UAA8BG,EAAMM,KAApC,4BCiBSC,EA7BA,SAACX,GAAW,IAAD,EACcY,mBAAS,IADvB,mBACjBC,EADiB,KACJC,EADI,KAiBxB,OACE,uBAAMb,UAAU,SAAhB,UACE,uBACEc,MAAOF,EACPG,SAlB2B,SAACC,GAChCH,EAAeG,EAAEC,OAAOH,QAkBpBI,KAAK,SAEP,uBAAOC,QAbgB,SAACH,GAC1BA,EAAEI,iBACFrB,EAAMsB,OAAOT,GALbC,EAAe,KAgBuBK,KAAK,SAASJ,MAAM,eC4C/CQ,EA9DH,WAAO,IAAD,EACcX,oBAAS,GADvB,mBACTY,EADS,KACAC,EADA,OAEYb,mBAAS,IAFrB,mBAETc,EAFS,KAEDC,EAFC,OAGwBf,mBAAS,MAHjC,mBAGTgB,EAHS,KAGKC,EAHL,KAMhBC,qBAAU,WAER,sBAAC,8BAAAC,EAAA,sEAC2BC,MAXV,4DAUjB,cACOC,EADP,gBAEwBA,EAAYC,OAFpC,OAEOC,EAFP,OAICR,EAAUQ,EAASxB,QACnBc,GAAW,GALZ,0CAAD,KAOC,IAEH,IAAMH,EAAM,uCAAG,WAAOT,GAAP,iBAAAkB,EAAA,6DACbN,GAAW,GACXI,EAAgB,MAFH,SAISG,MAAM,8BAAD,OAA+BnB,EAA/B,qBAJd,cAIPuB,EAJO,gBAKMA,EAAQF,OALd,OAOS,UAFhBA,EALO,QAOJG,UACPC,QAAQC,IAAIL,EAAKvB,QACjBgB,EAAUO,EAAKvB,SAEfkB,EAAgBK,EAAKM,OAGvBf,GAAW,GAdE,4CAAH,sDAiBZ,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQC,KAAK,WACb,cAAC,EAAD,CAAQoB,OAAQA,IAChB,mBAAGrB,UAAU,YAAb,mDACA,oBAAIA,UAAU,SAAd,SACGuB,IAAYI,EAGb,8CAEIA,EAGF,qBAAK3B,UAAU,eAAf,SAA+B2B,IAK/BF,EAAOe,KAAI,SAACrC,GAAD,OACT,cAAC,EAAD,CAA0BA,MAAOA,GAArBA,EAAMsC,iBClDfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f2a77dbc.chunk.js","sourcesContent":["\nconst Header = (props) => {\n  return (\n    <header className=\"App-header\">\n      <h1>{props.text}</h1>\n    </header>\n  );\n};\n\nexport default Header;","const initPoster = \"./noimage.jpg\";\n\nconst Movie = ({ movie }) => {\n  const poster = movie.Poster === \"N/A\" ? initPoster : movie.Poster;\n  return (\n    <li className=\"p-movie\">\n      <h2 className=\"p-movie__title\">{movie.Title}</h2>\n      <div className=\"p-movie__content\">\n        <img\n          className=\"p-movie__img\"\n          alt={`The movie titled: ${movie.Title}`}\n          src={poster}\n        />\n      </div>\n      <p className=\"p-movie__year\">{movie.Year}年公開</p>\n    </li>\n  );\n};\n\n\nexport default Movie;","import { useState } from \"react\";\n\nconst Search = (props) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleSearchInputChanges = (e) => {\n    setSearchValue(e.target.value);\n  }\n\n  const resetInputField = () => {\n    setSearchValue('')\n  }\n\n  const callSearchFunction = (e) => {\n    e.preventDefault();\n    props.search(searchValue);\n    resetInputField();\n  }\n\n  return (\n    <form className=\"search\">\n      <input\n        value={searchValue}\n        onChange={handleSearchInputChanges}\n        type=\"text\"\n      />\n      <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\n    </form>\n  );\n}\n\nexport default Search;","import React, { useState, useEffect } from \"react\";\nimport \"../assets/css/App.scss\";\nimport Header from \"./Header.jsx\";\nimport Movie from \"./Movie.jsx\";\nimport Search from \"./Search.jsx\";\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?apikey=4a3b711b&s=man&plot=full\"; // you should replace this with yours\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // mount時のみの処理（第２引数に空の配列）\n  useEffect(() => {\n    // なんかuseEffectのコールバック関数にasync関数は非推奨らしい\n    (async function() {\n      const initRequest = await fetch(MOVIE_API_URL);\n      const initJson = await initRequest.json()\n\n      setMovies(initJson.Search);\n      setLoading(false);\n    })();\n  }, []);\n\n  const search = async (searchValue) => {\n    setLoading(true);\n    setErrorMessage(null);\n\n    const request = await fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`);\n    const json = await request.json();\n\n    if (json.Response === \"True\") {\n      console.log(json.Search);\n      setMovies(json.Search);\n    } else {\n      setErrorMessage(json.Error);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header text=\"HOOKED\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <ul className=\"movies\">\n        {loading && !errorMessage ? (\n          // loding === true && errorMessage === null のとき\n          // loding画面表示\n        <span>loading...</span>\n\n        ) : errorMessage ? (\n          // loding === true && errorMessage !== null のとき\n          // エラーメッセージ表示\n          <div className=\"errorMessage\">{errorMessage}</div>\n\n        ) : (\n          // loding === false && errorMessage === null のとき\n          // componentをループで回すときはmapを使うらしい\n          movies.map((movie) => (\n            <Movie key={movie.imdbID} movie={movie} />\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/reset.css';\nimport './assets/css/font.css';\nimport App from './components/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}